name: rag-evaluation

services:
  # PostgreSQL数据库服务
  database:
    image: postgres:14
    container_name: rag-eval-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./sql.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rag_evaluation
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
      
  # FastAPI后端服务
  backend:
    build: 
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: rag-eval-backend
    volumes:
      - ../rag-evaluation-backend:/app
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@database:5432/rag_evaluation
      - POSTGRES_SERVER=database
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
      
  # Caddy Web服务器
  caddy:
    build:
      context: ..
      dockerfile: docker/Dockerfile.caddy
    container_name: rag-eval-caddy
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    ports:
      - "80:80"        # HTTP端口
      - "443:443"      # HTTPS端口
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    restart: unless-stopped

volumes:
  postgres_data:
    name: rag-eval-postgres-data
  caddy_data:
    name: rag-eval-caddy-data
  caddy_config:
    name: rag-eval-caddy-config
  caddy_logs:
    name: rag-eval-caddy-logs
